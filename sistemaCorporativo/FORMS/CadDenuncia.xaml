<Controls:MetroWindow x:Class="sistemaCorporativo.FORMS.CadDenuncia"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
		xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:Custom="http://schemas.AvalonControls/AvalonControlsLibrary/Controls"
        x:Name="wndDenuncia" mc:Ignorable="d"
        Title="Registro Denúncia" Height="715.797" Width="608.533" 
        ResizeMode="NoResize"
        BorderBrush="{DynamicResource AccentColorBrush}"
        WindowTransitionsEnabled="False"
        BorderThickness="1"
		WindowStartupLocation="CenterScreen" ShowInTaskbar="False" Loaded="wndDenuncia_Loaded">
    <mah:MetroWindow.Resources>
        <Style x:Key="MaskedTextBoxStyle1" TargetType="{x:Type Custom:MaskedTextBox}">
            <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
            <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True"/>
            <Setter Property="mah:ControlsHelper.ButtonWidth" Value="22"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="26"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
            <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Custom:MaskedTextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText">
                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Grid x:Name="PART_InnerGrid" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (mah:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                    <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                                <Button x:Name="PART_ClearText" Content="{Binding (mah:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (mah:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (mah:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                    <Button.Visibility>
                                        <Binding Mode="OneWay" Path="(mah:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Button.Visibility>
                                </Button>
                            </Grid>
                            <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TextWrapping" Value="NoWrap"/>
                                    <Condition Property="AcceptsReturn" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="mah:TextBoxHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Setter Property="Effect" TargetName="Base">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="False">
                                <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MaskedTextBoxStyle2" TargetType="{x:Type Custom:MaskedTextBox}">
            <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
            <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True"/>
            <Setter Property="mah:ControlsHelper.ButtonWidth" Value="22"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="26"/>
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
            <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Custom:MaskedTextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText">
                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Grid x:Name="PART_InnerGrid" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (mah:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                    <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding mah:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                                <Button x:Name="PART_ClearText" Content="{Binding (mah:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (mah:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (mah:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                    <Button.Visibility>
                                        <Binding Mode="OneWay" Path="(mah:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Button.Visibility>
                                </Button>
                            </Grid>
                            <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TextWrapping" Value="NoWrap"/>
                                    <Condition Property="AcceptsReturn" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding (mah:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="mah:TextBoxHelper.HasText" Value="False"/>
                                    <Condition Property="IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Setter Property="Effect" TargetName="Base">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="False">
                                <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="NRevisadaAnim">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grdNRevisadas">
        		<EasingDoubleKeyFrame KeyTime="0" Value="30.667"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.027"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grdNRevisadas">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.031"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdNRevisadas">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RevisadaAnim">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grdRevisadas">
        		<EasingDoubleKeyFrame KeyTime="0" Value="30.667"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.027"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdRevisadas">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0.395"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </mah:MetroWindow.Resources>
    <Grid>
        <TabControl HorizontalAlignment="Left" Height="675" VerticalAlignment="Top" Width="581" Margin="10,10,0,0">
            <TabItem x:Name="gConsultar" Header="Consultar">
                <Grid>
                	<ToggleButton x:Name="btnNRevisada" HorizontalAlignment="Left" Margin="-10.334,48.859,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" IsChecked="True" Click="btnNRevisada_Click" Height="30.3" Foreground="#CCFFFFFF" BorderBrush="#CC1BA1E2">
                		<ToggleButton.RenderTransform>
                			<TransformGroup>
                				<ScaleTransform/>
                				<SkewTransform/>
                				<RotateTransform Angle="-90"/>
                				<TranslateTransform/>
                			</TransformGroup>
                		</ToggleButton.RenderTransform>
						<TextBlock Text="Não-Revisadas"/>
                	</ToggleButton>
                	<Grid x:Name="grdNRevisadas" HorizontalAlignment="Left" Height="557.027" Margin="55,10,0,0" VerticalAlignment="Top" Width="510" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                		<Grid.RenderTransform>
                			<TransformGroup>
                				<ScaleTransform/>
                				<SkewTransform/>
                				<RotateTransform/>
                				<TranslateTransform/>
                			</TransformGroup>
                		</Grid.RenderTransform>
                		<TextBox x:Name="txtPesquisaNRevisadas" mah:TextBoxHelper.Watermark="Pesquisar" HorizontalAlignment="Left" Height="23" Margin="104.492,16.057,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="297"/>
                		<DataGrid x:Name="dgvDenunciaNRev" HorizontalAlignment="Right" Margin="0,83.058,10,0" VerticalAlignment="Top" Height="456.5" Width="490" RenderTransformOrigin="0.5,0.5" IsReadOnly="True"/>
                	</Grid>
                	<Grid x:Name="grdRevisadas" HorizontalAlignment="Left" Height="557.027" Margin="55,10,0,0" VerticalAlignment="Top" Width="510" RenderTransformOrigin="0.5,0.5">
                		<Grid.RenderTransform>
                			<TransformGroup>
                				<ScaleTransform/>
                				<SkewTransform/>
                				<RotateTransform/>
                				<TranslateTransform/>
                			</TransformGroup>
                		</Grid.RenderTransform>
                		<TextBox x:Name="txtPesquisaRevisadas" mah:TextBoxHelper.Watermark="Pesquisar" HorizontalAlignment="Left" Height="23" Margin="104.492,16.057,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="297"/>
                		<DataGrid x:Name="dgvDenunciaRev" HorizontalAlignment="Right" Margin="0,83.058,10,0" VerticalAlignment="Top" Height="456.5" Width="490" RenderTransformOrigin="0.5,0.5" IsReadOnly="True"/>
                	</Grid>
                	<Button x:Name="btnCancelar" Style="{DynamicResource SquareButtonStyle}" Content="Cancelar" HorizontalAlignment="Left" Margin="267,586.527,0,0" VerticalAlignment="Top" Width="96" Height="33" Click="btnCancelar_Click"/>
                	<Button x:Name="btnExcluir" Style="{DynamicResource SquareButtonStyle}" Content="Excluir" HorizontalAlignment="Left" Margin="469,586.527,0,0" VerticalAlignment="Top" Width="96" Height="33" TabIndex="4" Click="btnExcluir_Click"/>
                	<Button x:Name="btnEditar" Style="{DynamicResource SquareButtonStyle}" Content="Editar" HorizontalAlignment="Left" Margin="368,586.527,0,0" VerticalAlignment="Top" Width="96" Height="33" Click="btnEditar_Click" TabIndex="3"/>
                	<ToggleButton x:Name="btnRevisada" Click="btnRevisada_Click" HorizontalAlignment="Left" Margin="-10.334,134.526,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Height="30.3" Foreground="#CCFFFFFF" BorderBrush="#CC1BA1E2">
                		<ToggleButton.RenderTransform>
                			<TransformGroup>
                				<ScaleTransform/>
                				<SkewTransform/>
                				<RotateTransform Angle="-90"/>
                				<TranslateTransform/>
                			</TransformGroup>
                		</ToggleButton.RenderTransform>
                		<TextBlock Width="69.14" Height="13.3" Text="Revisadas" TextAlignment="Center"/>
                	</ToggleButton>
                </Grid>
            </TabItem>
            <TabItem x:Name="gCadastrar" Header="Cadastrar">
                <Grid>
                    <Grid Margin="0,0,7.667,8.667">
                        <Label Content="Logradouro:*" HorizontalAlignment="Left" Margin="93.853,238.5,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtLogradouro" Height="23" Margin="102.186,264.46,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                        <Label Content="Numero:*" HorizontalAlignment="Left" Margin="9.853,295.46,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtNumero" HorizontalAlignment="Left" Height="23" Margin="9.854,321.42,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="64.23" PreviewKeyDown="txtNumero_PreviewKeyDown"/>
                        <Label Content="Complemento" HorizontalAlignment="Left" Margin="93.853,295.46,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtComplemento" HorizontalAlignment="Left" Height="23" Margin="93.854,321.42,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="130.533"/>
                        <Label Content="Bairro:*" HorizontalAlignment="Left" Margin="241.853,295.46,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtBairro" HorizontalAlignment="Left" Height="23" Margin="241.854,321.42,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="121"/>
                        <Label Content="Estado:*" HorizontalAlignment="Left" Margin="510.529,295.46,0,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="cmbEstado" HorizontalAlignment="Left" Margin="503,321,0,0" VerticalAlignment="Top" Width="64">
                            <ComboBoxItem Content="AC"/>
                            <ComboBoxItem Content="AL"/>
                            <ComboBoxItem Content="AP"/>
                            <ComboBoxItem Content="AM"/>
                            <ComboBoxItem Content="BA"/>
                            <ComboBoxItem Content="CE"/>
                            <ComboBoxItem Content="DF"/>
                            <ComboBoxItem Content="ES"/>
                            <ComboBoxItem Content="GO"/>
                            <ComboBoxItem Content="MA"/>
                            <ComboBoxItem Content="MT"/>
                            <ComboBoxItem Content="MS"/>
                            <ComboBoxItem Content="MG"/>
                            <ComboBoxItem Content="PR"/>
                            <ComboBoxItem Content="PB"/>
                            <ComboBoxItem Content="PA"/>
                            <ComboBoxItem Content="PE"/>
                            <ComboBoxItem Content="PI"/>
                            <ComboBoxItem Content="RJ"/>
                            <ComboBoxItem Content="RN"/>
                            <ComboBoxItem Content="RS"/>
                            <ComboBoxItem Content="RO"/>
                            <ComboBoxItem Content="RR"/>
                            <ComboBoxItem Content="SC"/>
                            <ComboBoxItem Content="SE"/>
                            <ComboBoxItem Content="SP"/>
                            <ComboBoxItem Content="TO"/>
                        </ComboBox>
                        <Label Content="Cidade:*" HorizontalAlignment="Left" Margin="381.198,295.46,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtCidade" Height="23" Margin="381,321,81.333,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                        <Label Content="Telefone Fixo:*" HorizontalAlignment="Left" Margin="9.706,361.46,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtTelefone" Controls:TextBoxHelper.Watermark="DDD+Telefone" HorizontalAlignment="Left" Height="23" Margin="9.854,387.42,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="119.853"/>
                        <Label Content="Celular:" HorizontalAlignment="Left" Margin="148.706,361.46,0,0" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtCelular" Controls:TextBoxHelper.Watermark="DDD+Celular" HorizontalAlignment="Left" Height="23" Margin="148.707,387.42,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                        <Label Content="Denúncia:*" HorizontalAlignment="Left" Margin="10.295,415.92,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
                        <Button x:Name="btnCadastrar" Style="{DynamicResource SquareButtonStyle}" Content="Cadastrar" HorizontalAlignment="Left" Margin="456,578,0,0" VerticalAlignment="Top" Width="111" Height="42" Background="#FF35A3CD" RenderTransformOrigin="0.459,-0.293" Click="btnCadastrar_Click">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>
                        <Button x:Name="btnCancelarCadastro" Style="{DynamicResource SquareButtonStyle}" Content="Cancelar" HorizontalAlignment="Left" Margin="230,578,0,0" VerticalAlignment="Top" Width="108" Height="42" Click="btnCancelar_Click"/>
                        <TextBox x:Name="txtCitDenuncia" Controls:TextBoxHelper.Watermark="Descreva a denúncia neste campo..." HorizontalAlignment="Left" Height="131" Margin="10,442,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="557" AllowDrop="True" VerticalScrollBarVisibility="Auto"/>
                        <GroupBox x:Name="gpbDadosPessoais" Style="{x:Null}" Header="Dados Pessoais" Margin="0,37,0.333,402.333" IsEnabled="False">
                            <Grid x:Name="grd" Margin="0,-3.014,-2,1.04">
                                <Label Content="Nome:*" HorizontalAlignment="Left" Margin="9.814,10,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="txtNome" HorizontalAlignment="Left" Height="23" Margin="9.814,35.96,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="365"/>
                                <Label Content="E-Mail:" HorizontalAlignment="Left" Margin="396.814,10,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="txtEmail" HorizontalAlignment="Left" Height="23" Margin="397,36,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="152"/>
                                <Label Content="Tipo:*" HorizontalAlignment="Left" Margin="9.814,82.333,0,0" VerticalAlignment="Top"/>
                                <ComboBox x:Name="cmbTipo" HorizontalAlignment="Left" Margin="9.814,108.293,0,0" VerticalAlignment="Top" Width="53" RenderTransformOrigin="1.415,0.317">
                                    <ComboBoxItem Content="RG"/>
                                    <ComboBoxItem Content="RNE"/>
                                </ComboBox>
                                <Label Content="Número do Documento:*" HorizontalAlignment="Left" Margin="82.814,82.333,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="txtDocumento" HorizontalAlignment="Left" Height="23" Margin="82.284,108.293,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="166.53" PreviewKeyDown="txtDocumento_PreviewKeyDown"/>
                                <Label Content="Emissor:*" HorizontalAlignment="Left" Margin="270.521,82.333,0,0" VerticalAlignment="Top"/>
                                <Label Content="CPF:" HorizontalAlignment="Left" Margin="396.814,82.333,0,0" VerticalAlignment="Top"/>
                                <Label Content="Não informar o dígito" HorizontalAlignment="Left" Margin="82.814,134.293,0,0" VerticalAlignment="Top" FontSize="8" Width="166"/>
                                <Label Content="Caso não possua CPF, forneça o nº do CPF &#xA;do seu responsável ou representante legal." HorizontalAlignment="Left" Margin="391.628,134.293,0,0" VerticalAlignment="Top" FontSize="8" Width="162.186" Height="31.64"/>
                                <ComboBox x:Name="cmbEmissor" HorizontalAlignment="Left" Margin="270.521,108.293,0,0" VerticalAlignment="Top" Width="110.293" RenderTransformOrigin="1.415,0.317">
                                    <ComboBoxItem Tag="CNT" Content="CNT (Carteira Nacional de Habilitação)"/>
                                    <ComboBoxItem Tag="CTPS" Content="CTPS (Carteira de Trabaho e Previdência Social)"/>
                                    <ComboBoxItem Tag="DIC" Content="DIC (Diretoria de Identificação Civil)"/>
                                    <ComboBoxItem Tag="DPF" Content="DPF (Departamento da Policia Federal)"/>
                                    <ComboBoxItem Tag="DPT" Content="DPT (Departamento de Polícia Técnica Geral)"/>
                                    <ComboBoxItem Tag="FGTS" Content="FGTS (Fundo de Garantia do Tempo de Serviço)"/>
                                    <ComboBoxItem Tag="IFP" Content="IFP (Instituto Félix Pacheco)"/>
                                    <ComboBoxItem Tag="IML" Content="IML (Instituto Médico-Legal)"/>
                                    <ComboBoxItem Tag="IPF" Content="IPF (Instituto Pereira Faustino)"/>
                                    <ComboBoxItem Tag="MAE" Content="MAE ( Ministério da Aeronáutica)"/>
                                    <ComboBoxItem Tag="MEX" Content="MEX (Ministério do Exército)"/>
                                    <ComboBoxItem Tag="MMA" Content="MMA (Ministério da Marinha)"/>
                                    <ComboBoxItem Tag="MTE" Content="MTE (Ministério do Trabalho e Emprego)"/>
                                    <ComboBoxItem Tag="OAB" Content="OAB (Ordem dos Advogados do Brasil)"/>
                                    <ComboBoxItem Tag="PC" Content="PC (Policia Civil)"/>
                                    <ComboBoxItem Tag="POM" Content="POM (Policia Militar)"/>
                                    <ComboBoxItem Tag="SES" Content="SES (Carteira de Estrangeiro)"/>
                                    <ComboBoxItem Tag="SJS" Content="SJS (Secretaria da Justiça e Segurança)"/>
                                    <ComboBoxItem Tag="SJTS" Content="SJTS (Secretaria da Justiça do Trabalho e Segurança)"/>
                                    <ComboBoxItem Tag="SSP" Content="SSP (Secretaria da Segurança Pública)"/>
                                    <ComboBoxItem Tag="ZZZ" Content="ZZZ (Outros Inclusive exterior)"/>
                                </ComboBox>
                                <Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100.102" x:Name="txtCpf"  Mask="000.000.000-00" CharacterCasing="Upper" Margin="396.814,108.293,0,0" TabIndex="6" Text="___.___.___-__" Style="{DynamicResource MaskedTextBoxStyle2}"/>
                            </Grid>
                        </GroupBox>
                        <RadioButton x:Name="rdbAnonSim" Content="Sim" HorizontalAlignment="Left" Margin="282.438,14,0,0" VerticalAlignment="Top" GroupName="anonima" Checked="rdbAnonSim_Checked" IsChecked="True"/>
                        <RadioButton x:Name="rdbAnonNao" Content="Não" HorizontalAlignment="Left" Margin="340.055,14,0,0" VerticalAlignment="Top" GroupName="anonima" Checked="rdbAnonNao_Checked"/>
                        <Label Content="Denúncia Anônima:" HorizontalAlignment="Left" Margin="164.234,10,0,0" VerticalAlignment="Top"/>
                        <Label Content="CEP:*" HorizontalAlignment="Left" Margin="10.62,238.5,0,0" VerticalAlignment="Top" Width="71.135"/>
                        <Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="71.135" x:Name="txtCep"  Mask="00000-000" CharacterCasing="Upper" Margin="10.62,264.46,0,0" TabIndex="11" Style="{DynamicResource MaskedTextBoxStyle1}"/>
                        <Button x:Name="btnLimpar" Style="{DynamicResource SquareButtonStyle}" Content="Limpar" HorizontalAlignment="Left" Margin="343,578,0,0" VerticalAlignment="Top" Width="108" Height="42" Click="btnLimpar_Click"/>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Controls:MetroWindow>
