<Controls:MetroWindow
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="sistemaCorporativo.BuscarPessoaFisica"
	xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
    xmlns:Custom="http://schemas.AvalonControls/AvalonControlsLibrary/Controls"
	x:Name="wndBuscarPessoaFisica"
	Title="Buscar Pessoa Física"
	BorderBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"
	Width="719.5" Height="519" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">
	<Controls:MetroWindow.Resources>
		<Style x:Key="MaskedTextBoxStyle1" TargetType="{x:Type Custom:MaskedTextBox}">
			<Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
			<Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
			<Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
			<Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
			<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
			<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="MinHeight" Value="26"/>
			<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
			<Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Custom:MaskedTextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="enterGotFocus">
								<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitGotFocus">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="enterHasText">
								<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitHasText">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid>
							<Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Grid x:Name="PART_InnerGrid" Margin="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition x:Name="ButtonRow" Height="*"/>
								</Grid.RowDefinitions>
								<Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
								<ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
								<TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
									<TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<TextBlock.RenderTransform>
											<TranslateTransform/>
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
								<Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
									<Button.Visibility>
										<Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<BooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</Button.Visibility>
								</Button>
							</Grid>
							<Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
								<Setter Property="Visibility" TargetName="Message" Value="Visible"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="TextWrapping" Value="NoWrap"/>
									<Condition Property="AcceptsReturn" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
							</MultiTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
								<Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
								<Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
							</Trigger>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
								<Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
								<Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
									<Condition Property="IsFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.EnterActions>
								<MultiTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.ExitActions>
							</MultiTrigger>
							<Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Setter Property="Effect" TargetName="Base">
									<Setter.Value>
										<DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
								<Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Controls:MetroWindow.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid x:Name="grdHead" Height="100" VerticalAlignment="Top">
			<Rectangle Fill="#FF555555" Height="100.5" Stroke="Black" VerticalAlignment="Top"/>
			<Image HorizontalAlignment="Left" Height="90" Margin="10,10,0,0" VerticalAlignment="Top" Width="99.5" Source="/sistemaCorporativo;component/IMAGES/PesquisarPessoaFisica.png"/>
			<Label Content="Busque por um Indivíduo" HorizontalAlignment="Left" Margin="114.5,10,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
			<TextBlock HorizontalAlignment="Left" Margin="125,40.96,0,0" TextWrapping="Wrap" Text="Digite o nome completo, parte do nome, ou a data de nascimento caso necessário, selecione a pessoa desejada do resultado de busca, ou clique em 'Add Novo' para adicionar um novo indivíduo." VerticalAlignment="Top" Height="49.04" Width="422.46" Foreground="White"/>
		</Grid>
		<Grid x:Name="grdCorpo" HorizontalAlignment="Left" Margin="0,100,0,0" Width="711.5">
			<Label Content="Nome:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
			<TextBox HorizontalAlignment="Left" Height="23" Margin="60.22,9.96,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="236"/>
			<Label Content="(Nome, Sobrenome, Apelido)" HorizontalAlignment="Left" Margin="301.22,10,0,0" VerticalAlignment="Top" Foreground="#FFC3C3C3"/>
			<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="89" x:Name="txtDataNascimento"  Mask="00/00/0000" CharacterCasing="Upper" Margin="151.967,40.92,0,0" TabIndex="9" Style="{DynamicResource MaskedTextBoxStyle1}"/>
			<Label Content="Data de Nascimento de:" HorizontalAlignment="Left" Margin="10,40.96,0,0" VerticalAlignment="Top"/>
			<Label Content="à" HorizontalAlignment="Left" Margin="240.967,40.96,0,0" VerticalAlignment="Top"/>
			<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="89" x:Name="txtDataNascimento_Copy"  Mask="00/00/0000" CharacterCasing="Upper" Margin="262.074,40.92,0,0" TabIndex="9" Style="{DynamicResource MaskedTextBoxStyle1}"/>
			<Label Content="(Dexe em branco para uma busca de data exata)" HorizontalAlignment="Left" Margin="356.074,39.92,0,0" VerticalAlignment="Top" Foreground="#FFC3C3C3"/>
			<DataGrid HorizontalAlignment="Left" Margin="10,85.42,0,0" VerticalAlignment="Top" Height="264.08" Width="691.5"/>
			<Button x:Name="btnAddNovo" Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="10,354.5,0,0" VerticalAlignment="Top" Width="99" Click="btnAddNovo_Click" Height="27.96">
			 <Canvas>
				<Image Source="/sistemaCorporativo;component/IMAGES/addNew.png" Height="11.002" Width="14.667" Canvas.Top="-5.833" Canvas.Left="-39.126"  />
			 <TextBlock Text="Add Novo" Canvas.Left="-19.459" Canvas.Top="-7.781"/>
			 </Canvas>
			</Button>
			<Button Style="{DynamicResource SquareButtonStyle}" Margin="626.5,354.5,10,0" VerticalAlignment="Top">
				<TextBlock Text="Cancelar" />
		    </Button>
			<Button Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="522.404,354.5,0,0" VerticalAlignment="Top" Width="99" Height="27.96">
				<Canvas>
					<Image Source="/sistemaCorporativo;component/IMAGES/Check.png" Height="15.96" Width="14.667" Canvas.Top="-7.781" Canvas.Left="-39.126"  />
					<TextBlock Text="Selecionar" Canvas.Left="-19.459" Canvas.Top="-7.781"/>
				</Canvas>
			</Button>
		</Grid>
	</Grid>
</Controls:MetroWindow>