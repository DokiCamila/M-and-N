<Controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
        xmlns:Custom="http://schemas.AvalonControls/AvalonControlsLibrary/Controls" x:Name="wndCadPessoaFisica" x:Class="sistemaCorporativo.FORMS.CadPessoaFisica"
        Title="Cadastrar Envolvido: Pessoa Física" Height="798.656" Width="1381.374"
        BorderBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        ShowInTaskbar="False" WindowStartupLocation="CenterScreen"
		WindowState="Maximized" IgnoreTaskbarOnMaximize="True"  ShowMinButton="False" ShowMaxRestoreButton="False">

	<Controls:MetroWindow.Resources>
		<Style x:Key="MaskedTextBoxStyle1" TargetType="{x:Type Custom:MaskedTextBox}">
			<Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
			<Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
			<Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
			<Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
			<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
			<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="MinHeight" Value="26"/>
			<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
			<Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Custom:MaskedTextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="enterGotFocus">
								<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitGotFocus">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="enterHasText">
								<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitHasText">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid>
							<Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Grid x:Name="PART_InnerGrid" Margin="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition x:Name="ButtonRow" Height="*"/>
								</Grid.RowDefinitions>
								<Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
								<ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
								<TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
									<TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<TextBlock.RenderTransform>
											<TranslateTransform/>
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
								<Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
									<Button.Visibility>
										<Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<BooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</Button.Visibility>
								</Button>
							</Grid>
							<Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
								<Setter Property="Visibility" TargetName="Message" Value="Visible"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="TextWrapping" Value="NoWrap"/>
									<Condition Property="AcceptsReturn" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
							</MultiTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
								<Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
								<Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
							</Trigger>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
								<Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
								<Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
									<Condition Property="IsFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.EnterActions>
								<MultiTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.ExitActions>
							</MultiTrigger>
							<Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Setter Property="Effect" TargetName="Base">
									<Setter.Value>
										<DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
								<Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MaskedTextBoxStyle2" TargetType="{x:Type Custom:MaskedTextBox}">
			<Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
			<Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
			<Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
			<Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
			<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
			<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="MinHeight" Value="26"/>
			<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
			<Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Custom:MaskedTextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="enterGotFocus">
								<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitGotFocus">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="enterHasText">
								<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitHasText">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid>
							<Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Grid x:Name="PART_InnerGrid" Margin="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition x:Name="ButtonRow" Height="*"/>
								</Grid.RowDefinitions>
								<Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
								<ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
								<TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
									<TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<TextBlock.RenderTransform>
											<TranslateTransform/>
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
								<Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
									<Button.Visibility>
										<Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<BooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</Button.Visibility>
								</Button>
							</Grid>
							<Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
								<Setter Property="Visibility" TargetName="Message" Value="Visible"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="TextWrapping" Value="NoWrap"/>
									<Condition Property="AcceptsReturn" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
							</MultiTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
								<Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
								<Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
							</Trigger>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
								<Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
								<Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
									<Condition Property="IsFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.EnterActions>
								<MultiTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.ExitActions>
							</MultiTrigger>
							<Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Setter Property="Effect" TargetName="Base">
									<Setter.Value>
										<DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
								<Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MaskedTextBoxStyle3" TargetType="{x:Type Custom:MaskedTextBox}">
			<Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
			<Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
			<Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
			<Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
			<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
			<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="MinHeight" Value="26"/>
			<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
			<Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
			<Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Custom:MaskedTextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="enterGotFocus">
								<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitGotFocus">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="enterHasText">
								<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
							<Storyboard x:Key="exitHasText">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid>
							<Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Grid x:Name="PART_InnerGrid" Margin="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition x:Name="ButtonColumn" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition x:Name="ButtonRow" Height="*"/>
								</Grid.RowDefinitions>
								<Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
								<ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
								<TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
									<TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<TextBlock.RenderTransform>
											<TranslateTransform/>
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>
								<Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
									<Button.Visibility>
										<Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<BooleanToVisibilityConverter/>
											</Binding.Converter>
										</Binding>
									</Button.Visibility>
								</Button>
							</Grid>
							<Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
								<Setter Property="Visibility" TargetName="Message" Value="Visible"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
											<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="TextWrapping" Value="NoWrap"/>
									<Condition Property="AcceptsReturn" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
							</MultiTrigger>
							<DataTrigger Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
								<Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
								<Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
							</DataTrigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
							</Trigger>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
								<Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
								<Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
								<Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
								<Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
									<Condition Property="IsFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.EnterActions>
								<MultiTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</MultiTrigger.ExitActions>
							</MultiTrigger>
							<Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Setter Property="Effect" TargetName="Base">
									<Setter.Value>
										<DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
								<Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Controls:MetroWindow.Resources>

	<Grid Margin="0,-0.04,0,0.04">
		<TabControl TabStripPlacement="Left">
			<TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MetroTabItem}">
                        <Setter Property="Padding" Value="8" />
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
			<TabItem Header="Pessoais">
				<Grid Margin="0,0,-2.999,0" Background="Black">
					<GroupBox x:Name="grbDadosPessoais" Style="{x:Null}" Header="Dados Pessoais" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="330.293" Width="577.707">
						<Grid>
							<TextBox x:Name="txtPrimeiroNome" HorizontalAlignment="Left" Height="23" Margin="121.033,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="103"/>
							<Label Content="Primeiro Nome:*" HorizontalAlignment="Left" Margin="18,10.04,0,0" VerticalAlignment="Top"/>
							<Label Content="Ultimo Nome:*" HorizontalAlignment="Left" Margin="234,10.04,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtUltimoNome" HorizontalAlignment="Left" Height="23" Margin="328,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="227.707"/>
			
							<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="103" x:Name="txtDataNascimento"  Mask="00/00/0000" CharacterCasing="Upper" Margin="143.337,86.04,0,0" TabIndex="9" Style="{DynamicResource MaskedTextBoxStyle1}"/>
							<Label Content="Data de Nascimento:" HorizontalAlignment="Left" Margin="18,86.08,0,0" VerticalAlignment="Top"/>
							<Label Content="Data de Morte:" HorizontalAlignment="Left" Margin="48.803,118.08,0,0" VerticalAlignment="Top"/>
							<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="103" x:Name="txtDataMorte"  Mask="00/00/0000" CharacterCasing="Upper" Margin="143.337,118.04,0,0" TabIndex="9" Style="{DynamicResource MaskedTextBoxStyle1}"/>
							<TextBox x:Name="txtAltura" HorizontalAlignment="Left" Height="23" Margin="143.337,149.04,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="103"/>
							<Label Content="Altura (m):" HorizontalAlignment="Left" Margin="73.09,149.04,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtLargura" HorizontalAlignment="Left" Height="23" Margin="143.337,180.04,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="103"/>
							<Label Content="Largura (m):" HorizontalAlignment="Left" Margin="64.806,180.04,0,0" VerticalAlignment="Top"/>
							<Label Content="Raça:" HorizontalAlignment="Left" Margin="100.802,211,0,0" VerticalAlignment="Top"/>
							<ComboBox x:Name="cmbRaca" HorizontalAlignment="Left" Margin="143.337,211.04,0,0" VerticalAlignment="Top" Width="103"/>
							<Label Content="Sexo:*" HorizontalAlignment="Left" Margin="18,47,0,0" VerticalAlignment="Top"/>
							<RadioButton x:Name="rdbMasculino" Content="Masculino" HorizontalAlignment="Left" Margin="65.79,50.98,0,0" VerticalAlignment="Top" GroupName="sexoEnvolvido"/>
							<RadioButton x:Name="rdbFeminino" Content="Feminino" HorizontalAlignment="Left" Margin="151.136,50.98,0,0" VerticalAlignment="Top" GroupName="sexoEnvolvido"/>
							<ComboBox x:Name="cmbCorCabelo" HorizontalAlignment="Left" Margin="143.337,242.04,0,0" VerticalAlignment="Top" Width="103"/>
							<Label Content="Cor do Cabelo:" HorizontalAlignment="Left" Margin="49.63,241.96,0,0" VerticalAlignment="Top"/>
							<ComboBox x:Name="cmbCorOlhos" HorizontalAlignment="Left" Margin="143.337,273.04,0,0" VerticalAlignment="Top" Width="103"/>
							<Label Content="Cor dos Olhos:" HorizontalAlignment="Left" Margin="50.473,272.92,0,0" VerticalAlignment="Top"/>
							<ComboBox x:Name="cmbCorPele" HorizontalAlignment="Left" Margin="431.628,86.04,0,0" VerticalAlignment="Top" Width="124.079"/>
							<Label Content="Cor da Pele:" HorizontalAlignment="Left" Margin="353.468,86.08,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtNaturalidade" HorizontalAlignment="Left" Height="23" Margin="394.596,118.16,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="161.111"/>
							<Label Content="Naturalidade:" HorizontalAlignment="Left" Margin="308.446,118.2,0,0" VerticalAlignment="Top"/>
							<Label Content="Nacionalidade:" HorizontalAlignment="Left" Margin="322.147,242.08,0,0" VerticalAlignment="Top"/>
							<ComboBox x:Name="cmbNaturalidade" HorizontalAlignment="Left" Margin="415.537,242.04,0,0" VerticalAlignment="Top" Width="140.09"/>
							<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="123.999" x:Name="txtCpf"  Mask="000.000.000-00" CharacterCasing="Upper" Margin="431.628,149.12,0,0" TabIndex="6" Text="___.___.___-__" Style="{DynamicResource MaskedTextBoxStyle3}"/>
							<Label Content="CPF:" HorizontalAlignment="Left" Margin="394.018,149.08,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtRg" HorizontalAlignment="Left" Height="23" Margin="431.628,180.04,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="124"/>
							<Label Content="RG:" HorizontalAlignment="Left" Margin="398.618,180.04,0,0" VerticalAlignment="Top"/>
							<CheckBox x:Name="ckbEstrangeiroIlegal" Content="Estrangeiro Ilegal" HorizontalAlignment="Left" Margin="440.129,276.9,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.08,0.278"/>
							<ComboBox x:Name="cmbEstatoCivil" HorizontalAlignment="Left" Margin="452.626,211.24,0,0" VerticalAlignment="Top" Width="103"/>
							<Label Content="Estado Civil:" HorizontalAlignment="Left" Margin="374.409,211.12,0,0" VerticalAlignment="Top"/>
							<Label Content="Conhecido Como:" HorizontalAlignment="Left" Margin="232.195,47,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtUltimoNome_Copy" HorizontalAlignment="Left" Height="23" Margin="341.772,46.96,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="213.935"/>
			
						</Grid>
					</GroupBox>
					<GroupBox x:Name="grbEndereco" Style="{x:Null}" Header="Endereço" HorizontalAlignment="Left" Margin="10,353.342,0,0" VerticalAlignment="Top" Height="258.459" Width="577.707">
						<Grid>
							<Label Content="CEP:" HorizontalAlignment="Left" Margin="10,-3.95,0,0" VerticalAlignment="Top"/>
							<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="73" x:Name="txtCep"  Mask="00000-000" CharacterCasing="Upper" Margin="10,22.01,0,0" TabIndex="11" Style="{DynamicResource MaskedTextBoxStyle2}"/>
							<Label Content="Logradouro:" HorizontalAlignment="Left" Margin="98.133,-3.95,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtLogradouro" Height="23" Margin="98.133,22.01,209.041,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
							<Label Content="Nº:" HorizontalAlignment="Left" Margin="366.458,-3.95,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtNumero" HorizontalAlignment="Left" Height="23" Margin="365.566,22.01,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49.567"/>
							<Label Content="Complemento:" HorizontalAlignment="Left" Margin="425.866,-3.95,0,0" VerticalAlignment="Top"/>
							<TextBox HorizontalAlignment="Left" Height="23" Margin="425.601,22.01,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="130.106"/>
							<Label Content="Bairro:" HorizontalAlignment="Left" Margin="10,53.01,0,0" VerticalAlignment="Top"/>
							<TextBox HorizontalAlignment="Left" Height="23" Margin="10,78.97,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="137.106"/>
							<Label Content="Cidade:" HorizontalAlignment="Left" Margin="160.596,53.01,0,0" VerticalAlignment="Top"/>
							<TextBox HorizontalAlignment="Left" Height="23" Margin="160.596,78.97,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="137.773"/>
							<Label Content="UF:" HorizontalAlignment="Left" Margin="312.702,53.01,0,0" VerticalAlignment="Top"/>
							<ComboBox HorizontalAlignment="Left" Margin="312.702,78.97,0,0" VerticalAlignment="Top" Width="64.964"/>
							<Button Style="{DynamicResource SquareButtonStyle}" Content="Adicionar" HorizontalAlignment="Left" Margin="482.04,53.01,0,0" VerticalAlignment="Top" Width="73.667"/>
							<Button Style="{DynamicResource SquareButtonStyle}" Content="Excluir" HorizontalAlignment="Left" Margin="482.04,85.97,0,0" VerticalAlignment="Top" Width="73.667"/>
							<DataGrid x:Name="dgvOutrasAgencias_Copy2" HorizontalAlignment="Left" Margin="10,119.166,0,0" VerticalAlignment="Top" Height="104" Width="545" Background="#FF2E2E2E">
								<DataGrid.Columns>
									<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Nº" MinWidth="47"/>
									<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="CEP" MinWidth="78" />
									<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Logradouro" MinWidth="338"/>
									<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Número" MinWidth="82"  />
								</DataGrid.Columns>
							</DataGrid>
						</Grid>
					</GroupBox>
					<DataGrid x:Name="dgvOutrasAgencias" HorizontalAlignment="Left" Margin="601.784,54.01,0,0" VerticalAlignment="Top" Height="107" Width="194" Background="#FF2E2E2E">
						<DataGrid.Columns>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" MinWidth="40" Header="Nº"/>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Número do Telefone" MinWidth="154" />
						</DataGrid.Columns>
					</DataGrid>
					<Label Content="Telefone Fixo:" HorizontalAlignment="Left" Margin="601.784,23.05,0,0" VerticalAlignment="Top"/>
					<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="106.633" x:Name="txtCpf_Copy"  Mask="(00)0000-0000" CharacterCasing="Upper" Margin="689.574,23.01,0,0" TabIndex="6" Text="___.___.___-__" Style="{DynamicResource MaskedTextBoxStyle3}"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Adicionar" HorizontalAlignment="Left" Margin="804.54,54.01,0,0" VerticalAlignment="Top" Width="73.667"/>
					<DataGrid x:Name="dgvOutrasAgencias_Copy" HorizontalAlignment="Left" Margin="601.784,199.677,0,0" VerticalAlignment="Top" Height="107" Width="194" Background="#FF2E2E2E">
						<DataGrid.Columns>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" MinWidth="40" Header="Nº"/>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Número do Celular" MinWidth="154"/>
						</DataGrid.Columns>
					</DataGrid>
					<Label Content="Celular:" HorizontalAlignment="Left" Margin="643.595,166.05,0,0" VerticalAlignment="Top"/>
					<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="97.999" x:Name="txtCpf_Copy1"  Mask="(00)00000-0000" CharacterCasing="Upper" Margin="697.785,166.01,0,0" TabIndex="6" Text="___.___.___-__" Style="{DynamicResource MaskedTextBoxStyle3}"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Adicionar" HorizontalAlignment="Left" Margin="804.54,199.677,0,0" VerticalAlignment="Top" Width="73.667"/>
					<DataGrid x:Name="dgvOutrasAgencias_Copy1" HorizontalAlignment="Left" Margin="601.784,345.294,0,0" VerticalAlignment="Top" Height="107" Width="194" Background="#FF2E2E2E">
						<DataGrid.Columns>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Width="40" Header="Nº"/>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="E-Mail" MinWidth="154" />
						</DataGrid.Columns>
					</DataGrid>
					<Label Content="E-mail:" HorizontalAlignment="Left" Margin="601.784,314.333,0,0" VerticalAlignment="Top"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Adicionar" HorizontalAlignment="Left" Margin="804.54,345.294,0,0" VerticalAlignment="Top" Width="73.667"/>
					<TextBox HorizontalAlignment="Left" Height="23" Margin="652.511,314.293,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="143.696"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Excluir" HorizontalAlignment="Left" Margin="804.54,86.97,0,0" VerticalAlignment="Top" Width="73.667"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Excluir" HorizontalAlignment="Left" Margin="804.54,232.637,0,0" VerticalAlignment="Top" Width="73.667"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Excluir" HorizontalAlignment="Left" Margin="804.54,378.254,0,0" VerticalAlignment="Top" Width="73.667"/>
					<DataGrid x:Name="dgvOutrasAgencias_Copy3" HorizontalAlignment="Left" Margin="601.784,491.294,0,0" VerticalAlignment="Top" Height="107" Width="194" Background="#FF2E2E2E">
						<DataGrid.Columns>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Width="40" Header="Nº"/>
							<DataGridTextColumn Binding="{x:Null}" ClipboardContentBinding="{x:Null}" Header="Nome de Usuário" MinWidth="154" />
						</DataGrid.Columns>
					</DataGrid>
					<Label Content="Nome de Usuário:" HorizontalAlignment="Left" Margin="601.784,460.332,0,0" VerticalAlignment="Top"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Adicionar" HorizontalAlignment="Left" Margin="804.54,491.293,0,0" VerticalAlignment="Top" Width="73.667"/>
					<TextBox HorizontalAlignment="Left" Height="23" Margin="704.664,460.292,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="91.543"/>
					<Button Style="{DynamicResource SquareButtonStyle}" Content="Excluir" HorizontalAlignment="Left" Margin="804.54,524.253,0,0" VerticalAlignment="Top" Width="73.667"/>
					<GroupBox x:Name="grbCarteiraMotorista"  Style="{x:Null}" Header="CNH" HorizontalAlignment="Left" Margin="893,234.577,0,0" VerticalAlignment="Top" Height="138.677" Width="351.923" ToolTip="Carteira Nacional de Habilitação">
						<Grid>
							<Label Content="Nº de Registro" HorizontalAlignment="Left" Margin="8.216,10.04,0,0" VerticalAlignment="Top"/>
							<TextBox x:Name="txtUltimoNome_Copy1" HorizontalAlignment="Left" Height="23" Margin="102.216,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="227.707"/>
							<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="89.667" x:Name="txtDataNascimento_Copy"  Mask="00/00/0000" CharacterCasing="Upper" Margin="85.57,40.96,0,0" TabIndex="9" Style="{DynamicResource MaskedTextBoxStyle1}"/>
							<Label Content="Emissão:" HorizontalAlignment="Left" Margin="25.333,39.96,0,0" VerticalAlignment="Top"/>
							<ComboBox x:Name="cmbCorPele_Copy" Margin="249.485,40.96,10,0" VerticalAlignment="Top"/>
							<Label Content="Cat Hab:" HorizontalAlignment="Left" Margin="186.519,41,0,0" VerticalAlignment="Top" Width="57.966"/>
							<Custom:MaskedTextBox Height="26" HorizontalAlignment="Left" VerticalAlignment="Top" Width="89.667" x:Name="txtDataNascimento_Copy1"  Mask="00/00/0000" CharacterCasing="Upper" Margin="85.57,71.92,0,0" TabIndex="9" Style="{DynamicResource MaskedTextBoxStyle1}"/>
							<Label Content="Validade:" HorizontalAlignment="Left" Margin="22.079,70.92,0,0" VerticalAlignment="Top"/>
							<ComboBox x:Name="cmbCorPele_Copy1" Margin="249.485,71.88,10,0" VerticalAlignment="Top"/>
							<Label Content="Estado:" HorizontalAlignment="Left" Margin="195.186,71.96,0,0" VerticalAlignment="Top" Width="49.299"/>
						
						</Grid>
					</GroupBox>
					<GroupBox x:Name="grbQuadrilha"  Style="{x:Null}" Header="Quadrilha" HorizontalAlignment="Left" Margin="893,10,0,0" VerticalAlignment="Top" Height="217.637" Width="287.423">
						<Grid>
							<CheckBox x:Name="ckbEstrangeiroIlegal_Copy" Content="Membro de Quadrilha" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.08,0.278"/>
							<Label Content="Códigos da Quadrilha:" HorizontalAlignment="Left" Margin="10,33,0,0" VerticalAlignment="Top"/>
							<ListBox HorizontalAlignment="Left" Height="121.186" Margin="10,63.96,0,0" VerticalAlignment="Top" Width="267.423"/>
						</Grid>
					</GroupBox>
					<GroupBox x:Name="grbQuadrilha_Copy1"  Style="{x:Null}" Header="Observações" HorizontalAlignment="Left" Margin="893,381.636,0,0" VerticalAlignment="Top" Height="216.658" Width="351.923">
						<Grid>
							<TextBox HorizontalAlignment="Left" Height="173.698" Margin="10,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="319.923"/>
						</Grid>
					</GroupBox>
					<Button Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="1196.706,18.01,0,0" VerticalAlignment="Top" Width="97.667" Height="31">
				    <TextBlock Text="Ok" />
					</Button>
					<Button Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="1196.706,54.01,0,0" VerticalAlignment="Top" Width="97.667" Height="31">
					<TextBlock Text="Limpar" />
					</Button>
					<Button Style="{DynamicResource SquareButtonStyle}" HorizontalAlignment="Left" Margin="1196.706,90.01,0,0" VerticalAlignment="Top" Width="97.667" Height="31">
					<TextBlock Text="Cancelar" />
					</Button>
				
				</Grid>
			</TabItem>
			<TabItem Header="TabItem">
				<Grid Background="#FFE5E5E5"/>
			</TabItem>
		</TabControl>
		
	</Grid>
</Controls:MetroWindow>
